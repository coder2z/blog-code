<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>websocket on Coder2z Blog</title>
    <link>http://myxy99.cn/tags/websocket/</link>
    <description>Recent content in websocket on Coder2z Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 24 Jul 2020 14:06:27 +0800</lastBuildDate><atom:link href="http://myxy99.cn/tags/websocket/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>go-micro开发微服务聊天室</title>
      <link>http://myxy99.cn/posts/go-micro%E5%BC%80%E5%8F%91%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%81%8A%E5%A4%A9%E5%AE%A4/</link>
      <pubDate>Fri, 24 Jul 2020 14:06:27 +0800</pubDate>
      
      <guid>http://myxy99.cn/posts/go-micro%E5%BC%80%E5%8F%91%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%81%8A%E5%A4%A9%E5%AE%A4/</guid>
      <description>基于go-micro开发的微服务聊天室 技术栈  微服务框架：go-micro
  web框架：gin
  orm:gorm</description>
    </item>
    
    <item>
      <title>Golang使用WebSocket</title>
      <link>http://myxy99.cn/posts/golang%E4%BD%BF%E7%94%A8websocket/</link>
      <pubDate>Fri, 17 Jul 2020 11:19:32 +0800</pubDate>
      
      <guid>http://myxy99.cn/posts/golang%E4%BD%BF%E7%94%A8websocket/</guid>
      <description>Golang使用WebSocket WebSocket是一种通信协议，旨在改善HTTP作为无状态协议通信的效率问题，WebSocket是客户端与服务器之间的全双工连接，客户端和服务器只需要建立一次连接就可以使用该连接进行通信。在我们的项目中，一般客户端是前端页面，使用JavaScript创建WebSocket与后端的WebSocket服务端进行通信。
安装依赖 go get -u github.com/gorilla/websocket
封装方法 package websocketConn import ( &amp;#34;errors&amp;#34; &amp;#34;github.</description>
    </item>
    
  </channel>
</rss>
